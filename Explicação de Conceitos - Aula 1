A Inteligência Artificial é a capacidade que soluções tecnológicas têm de simular a inteligência humana, realizando determinadas atividades de maneira autônoma e aprendendo por si mesmas, graças ao processamento de um grande volume de dados que recebem de seus usuários.
A definição do que é algoritmo é a seguinte: algoritmo é uma sequência finita de ações executáveis que visam obter uma solução para um determinado tipo de problema. Traduzindo, ele é uma receita que mostra passo a passo os procedimentos necessários para a realização de uma tarefa. 
É o conjunto de programas que gerenciam recursos, processadores, armazenamento, dispositivos de entrada e saída e dados da máquina e seus periféricos. O sistema que faz comunicação entre o hardware e os demais softwares. O Sistema Operacional cria uma plataforma comum a todos os programas utilizados. Exemplos: Dos, Unix, Linux, Mac OS, OS-2, Windows NT.
Um sistema de arquivos é uma estrutura usada por um sistema operacional para organizar e gerenciar arquivos em um dispositivo de armazenamento, como um disco rígido, unidade de estado sólido (SSD) ou pendrive. Ele define como os dados são armazenados, acessados e organizados no dispositivo de armazenamento. Diferentes sistemas de arquivos têm caraterísticas variáveis e frequentemente são específicos para determinados sistemas operacionais ou dispositivos. Aqui estão alguns dos sistemas de arquivos comuns e seus prós e contras.
Informação é a reunião ou o conjunto de dados e conhecimentos organizados, que possam constituir referências sobre um determinado acontecimento, fato ou fenômeno.

Bibliografia:
https://www.tableau.com/pt-br/learn/articles/ai#:~:text=A%20Intelig%C3%AAncia%20Artificial%20%C3%A9%20a,que%20recebem%20de%20seus%20usu%C3%A1rios. 
https://coodesh.com/blog/dicionario/o-que-e-algoritmo/#:~:text=A%20defini%C3%A7%C3%A3o%20do%20que%20%C3%A9,a%20realiza%C3%A7%C3%A3o%20de%20uma%20tarefa.
https://www.inf.ufsc.br/~j.barreto/cca/sisop/sisoperac.html#:~:text=Conceito%3A%20%C3%89%20o%20conjunto%20de,a%20todos%20os%20programas%20utilizados.
https://www.kingston.com/br/blog/personal-storage/understanding-file-systems#:~:text=Um%20sistema%20de%20arquivos%20%C3%A9,organizados%20no%20dispositivo%20de%20armazenamento.
https://www.significados.com.br/informacao/ 

Atividade número 2.

1. Encontre refêrencias e comente:
A. A relacao entre a LGPD e os Data Centers no Brasil.
Resposta: A LGPD foi instituída para proteger direitos fundamentais, como liberdade, privacidade e o desenvolvimento da personalidade dos indivíduos. Seu objetivo é regular o tratamento de dados pessoais, sejam de pessoas físicas ou jurídicas, tanto de entidades privadas quanto públicas, abrangendo formatos manuais e digitais. Data Centers são empresas que mantêm servidores para o processamento e armazenamento de dados, sendo essenciais para grandes corporações no universo digital e na internet. No cenário atual, o Brasil se destaca contribuiu para a valorização desses centros no país, impulsionada pela regulamentação da proteção de dados, a computação em nuvem e o investimento interno.

B. Formatos de arquivos de dados proprietários e abertos.
B.1. Forneça exemplos de formatos
Resposta: Exemplos de formatos de arquivos proprietários incluem SWF (Shockwave Flash), PPT (PowerPoint) e DOC (Microsoft Word). Já entre os formatos de arquivos de dados abertos estão ODP (Open Document Presentation), ODF (Open Document Format) e o formato PSD (Adobe Photoshop).

B.2. Discuta as implicações relacionadas a dados públicos.
Resposta: Dados públicos são aqueles sem restrições de privacidade, segurança ou controle de acesso, conforme estabelecido por legislações. Originados pelo exercício do poder estatal, esses dados devem ser divulgados e podem ser armazenados em formatos de arquivos abertos ou proprietários. Arquivos abertos seguem padrões amplamente aceitos, permitindo sua utilização por diferentes softwares, enquanto os proprietários são restritos e controlados por direitos autorais, representando uma forma de privatização da memória digital. No Brasil, os dados públicos deveriam ser disponibilizados em formatos abertos, mas frequentemente são disponibilizados em formatos proprietários. O governo justifica essa prática como uma medida de segurança para proteger o acesso aos dados. No entanto, há esforços para que o governo brasileiro adote a disponibilização dos dados em formatos abertos.

Atividade número 3.
1 – Explique as diferenças entre 3 linguagens de programação: 
Python é uma linguagem de programação conhecida por sua sintaxe simples e legível. Suporta múltiplos paradigmas, como procedural, orientada a objetos e funcional. Sua tipagem é dinâmica, o que significa que não é necessário declarar tipos de variáveis. Python é interpretado, facilitando a execução e a depuração, embora isso possa resultar em menor desempenho em comparação com linguagens compiladas. É amplamente utilizado em desenvolvimento web, análise de dados, machine learning e automação de tarefas devido à sua simplicidade e vasta gama de bibliotecas.
JavaScript é essencial para o desenvolvimento web, inicialmente criado para adicionar interatividade às páginas da web e, mais recentemente, usado também no lado do servidor com Node.js. Suporta programação orientada a objetos, funcional e imperativa, e possui tipagem dinâmica. JavaScript é interpretado em navegadores e pode ser compilado Just-In-Time (JIT) com Node.js, o que melhora o desempenho. A sintaxe pode ser complexa para iniciantes devido à sua flexibilidade e às nuances do código assíncrono.
C é uma linguagem procedural, conhecida por seu alto desempenho e controle preciso sobre recursos do sistema. Possui tipagem estática, exigindo declaração explícita de tipos de variáveis, e é compilada, o que resulta em execução muito rápida. A sintaxe de C é mais complexa e exige gestão manual de memória, o que pode levar a erros se não for bem administrado. É amplamente utilizada para desenvolvimento de sistemas operacionais, drivers de hardware e aplicações que necessitam de alta performance.

a. Tente fazer um código mínimo em cada uma delas
b. 
1. Código de Java: https://github.com/giuliaffonseca/Projeto-Integrador---Giulia.git
2. Código Python: https://github.com/giuliaffonseca/Projeto-Integrador---Giulia.git
3. Código C: https://github.com/giuliaffonseca/Projeto-Integrador---Giulia.git

Atividade número 4
a. 
Frutas = ('Banana', 'Maçã', 'Uva', 'Morango')
for Frutas in Frutas:
    print (Frutas)
    https://github.com/giuliaffonseca/Projeto-Integrador---Giulia/blob/main/giulia%201.PNG
    
b. 
#Variável Nota
nota = 10

# Condição Para Verificar a Nota
if nota >= 7:
    print("Aprovado.")
else:
    print("Não aprovado.")
https://github.com/giuliaffonseca/Projeto-Integrador---Giulia/blob/main/giulia%202.PNG 

Ativiidade número 05

1. def bubble_sort(arr):
    n = len(arr)
    # Percorre toda a lista
    for i in range(n):
        # O último i elementos já estão na posição correta
        for j in range(0, n - i - 1):
            # Troca se o elemento encontrado for maior que o próximo elemento
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

# Exemplo de uso
lista = [64, 34, 25, 12, 22, 11, 90]
print("Lista original:", lista)
lista_ordenada = bubble_sort(lista)
print("Lista ordenada:", lista_ordenada)

Lista original: [64, 34, 25, 12, 22, 11, 90]
Lista ordenada: [11, 12, 22, 25, 34, 64, 90]

[Execution complete with exit code 0]

2. def extrair_vogais(frase):
    # Definindo as vogais
    vogais = 'aeiouAEIOU'
    # Filtrando e juntando as vogais
    resultado = ''.join([char for char in frase if char in vogais])
    return resultado

# Frase de exemplo
frase = "Fluminense é o atual campeão da América"
# Extraindo e imprimindo as vogais
vogais = extrair_vogais(frase)
print("Vogais na frase:", vogais)

Vogais na frase: uieeoauaaeoaAia

[Execution complete with exit code 0]


Atividade número 6.

1. 
def imprimir_informacoes(nome, idade, cidade):
# Usa print com sep e end para formatar a saída
print(f"Nome: {nome}", end=" - ")
print(f"Idade: {idade}", end=" - ")
print(f"Cidade: {cidade}!", end="\n")


Nome: Giulia - Idade: 23 - Cidade: Rio de Janeiro!


** Process exited - Return Code: 0 **
Press Enter to exit terminal

# Exemplo de chamada da função
imprimir_informacoes("Giulia", 23, "Rio de Janeiro")

2.
def calculadora():
    # Solicita ao usuário o primeiro número
    num1 = float(input("Digite o primeiro número: "))
    
    # Solicita ao usuário o segundo número
    num2 = float(input("Digite o segundo número: "))
    
    # Solicita ao usuário a operação desejada
    operacao = input("Digite a operação desejada (+, -, *, /): ")
    
    # Calcula e imprime o resultado com base na operação escolhida
    if operacao == '+':
        resultado = num1 + num2
    elif operacao == '-':
        resultado = num1 - num2
    elif operacao == '*':
        resultado = num1 * num2
    elif operacao == '/':
        # Verifica se o segundo número é zero para evitar divisão por zero
        if num2 == 0:
            print("Erro: Divisão por zero não é permitida.")
            return
        resultado = num1 / num2
    else:
        print("Operação inválida. Use +, -, * ou /.")
        return
    
    # Imprime o resultado
    print(f"O resultado de {num1} {operacao} {num2} é: {resultado}")

# Chama a função para executar
calculadora()

Digite o primeiro número: 
155
Digite o segundo número: 
10
Digite a operação desejada (+, -, *, /): 
/
O resultado de 155.0 / 10.0 é: 15.5


** Process exited - Return Code: 0 **
Press Enter to exit terminal
3.
def criar_lista_de_compras():
    # Solicita ao usuário para digitar os itens separados por vírgula
    entrada = input("Digite os itens da lista de compras: ")
    
    # Divide a entrada em uma lista de itens, removendo espaços extras
    itens = [item.strip() for item in entrada.split(',')]
    
    # Imprime os itens com um índice
    for i, item in enumerate(itens, start=1):
        print(f"Item {i}: {item}")

# Chama a função
criar_lista_de_compras()

Digite os itens da lista de compras: 
uva, banana, kiwi, maçã
Item 1: uva
Item 2: banana
Item 3: kiwi
Item 4: maçã


** Process exited - Return Code: 0 **
Press Enter to exit terminal

4. 
Temperatura = int(input("Digite a temperatura: "))
print("No Rio a temperatura é de", (26 * 9/5) + 32., "graus  Fahrenheit.")

Digite a temperatura: 
26
No Rio a temperatura é de 78.8 graus  Fahrenheit.


** Process exited - Return Code: 0 **
Press Enter to exit terminal

5.
def coletar_nomes():
    nomes = []  # Inicializa uma lista vazia para armazenar os nomes
    
    while True:  # Inicia um loop que vai continuar até ser interrompido
        nome = input("Digite um nome (ou 'sair' para encerrar): ")  # Pede ao usuário para digitar um nome
        
        if nome.lower() == 'sair':  # Verifica se o usuário digitou 'sair'
            break  # Sai do loop se o nome for 'sair'
        
        nomes.append(nome)  # Adiciona o nome à lista de nomes
    
    # Após sair do loop, imprime todos os nomes que foram digitados
    print("Nomes digitados:")
    for nome in nomes:  # Itera sobre a lista de nomes
        print(nome)  # Imprime cada nome em uma nova linha

# Chama a função para executar
coletar_nomes()

Digite um nome (ou 'sair' para encerrar): 
Giulia
Digite um nome (ou 'sair' para encerrar): 
Anna
Digite um nome (ou 'sair' para encerrar): 
Bruna
Digite um nome (ou 'sair' para encerrar): 
Yan
Digite um nome (ou 'sair' para encerrar): 
Rafael
Digite um nome (ou 'sair' para encerrar): 
sair
Nomes digitados:
Giulia
Anna
Bruna
Yan
Rafael


** Process exited - Return Code: 0 **
Press Enter to exit terminal


